Doctest: 1-my_list.py module
======================


Using ''Mylist''
**********************

This is a Doctest for the Mylist Class in 1-my_list.y module.

- First:

	*******************
	# import ''Mylist'' Class from the ''1-my_list.py'' module:
	*******************

    >>> Mylist = __import__('1-my_list').Mylist
	
	

- Now use it:

	*******************
	# No error testing:
	*******************

	--------------------------------------------------
	- Create instance: Correct mode with no arguments.

	>>>	my_list = Mylist()
	>>>print(my_list)
	[]

	--------------------------------------------------
	- Create instance: Correct mode with argument type list.

	>>>	my_list = Mylist([-1, 3, 2, 5])
	>>>print(my_list)
	[-1, 3, 2, 5]

	--------------------------------------------------
	- Type of instance:

	>>> print(my_list.__class__.__name__)
	Mylist

	--------------------------------------------------
	- Instance methods and attributes:

	>>> print(my_list.__dir__())
	['clear', '__format__', '__getattribute__', 'append', '__lt__', '__ge__',
	'__imul__', 'pop', '__gt__', '__repr__', '__add__', '__contains__',
	'__str__', '__hash__', '__reversed__', '__reduce_ex__', '__reduce__',
	'print_sorted', '__init__', '__weakref__', '__iadd__', 'remove',
	'__subclasshook__', 'extend', 'reverse', '__class__', '__dict__',
	'__getitem__', '__mul__', 'sort', '__eq__', '__delitem__', '__delattr__',
	'__len__', '__le__', '__setattr__', '__module__', '__rmul__', 'count',
	'__doc__', '__dir__', 'copy', '__new__', '__setitem__', 'insert', 'index',
	'__iter__', '__sizeof__', '__ne__']

	--------------------------------------------------
	- Method print_sorted() empty list:

	>>> my_list = Mylist()
	>>> my_list.sorted()
	[]

	--------------------------------------------------
	- Method append:

	>>> my_list.append(1)
	>>> my_list.append(4)
	>>> my_list.append(2)
	>>> my_list.append(3)
	>>> my_list.append(5)
	>>> print(my_list)
	[1, 4, 2, 3, 5]

	--------------------------------------------------
	- Method print_sorted() not empty list:

	>>> my_list.sorted()
	[1, 2, 3, 4, 5]

	--------------------------------------------------

	*******************
	# Error testing:
	*******************

	- Create instance: Incorrect mode with arguments of non type list.

	>>>	my_list = Mylist(1)
	Traceback (most recent call last):
  		File "main.py", line 11, in <module>
    		my_list = MyList(1)
	TypeError: 'int' object is not iterable
